import { ActionRowBuilder, EmbedBuilder, StringSelectMenuBuilder } from "discord.js";
import { htmlToText } from "html-to-text";
export default {
    nullTotal: new EmbedBuilder()
        .setColor('Red')
        .setDescription(`
        –ü–æ –≤–∞—à–µ–º—É –∑–∞–ø–æ–æ—Å—É –Ω–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ( –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å
    `),
    listGames: function (data, interaction) {
        const values = data.items.map((item) => { return { value: item.id.toString(), label: item.name.slice(0, 100) }; });
        return {
            embed: new EmbedBuilder()
                .setAuthor({ name: interaction.client.user.displayName, iconURL: interaction.client.user.displayAvatarURL() })
                .setTitle(`–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–∏—Å–∫–∞`)
                .setColor('Green')
                .setDescription(`
                –ü–æ –≤–∞—à–µ–º—É –∑–∞–ø—Ä–æ—Å—É –±—ã–ª–æ –Ω–∞–π–¥–µ–Ω–æ –∏–≥—Ä: \`${data.total} \` 
            `),
            component: new ActionRowBuilder().addComponents(new StringSelectMenuBuilder()
                .setCustomId('listGamesSteam')
                .setPlaceholder('–í—ã–±–µ—Ä–∏—Ç–µ –∏–≥—Ä—É')
                .addOptions(values))
        };
    },
    gameDetails: function (data, success) {
        const description = htmlToText(data.data.detailed_description, { wordwrap: 130, preserveNewlines: true });
        let embed = new EmbedBuilder()
            .setAuthor({ name: `–†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∏: ${data.data.developers.join(', ')}\n–ò–∑–¥–∞—Ç–µ–ª—å: ${data.data.publishers.join(', ')}` })
            .setTitle(data.data.name)
            .setThumbnail(data.data.header_image)
            .setColor('Random')
            .setDescription(description.slice(0, 4096))
            .addFields({ name: '–î–∞—Ç–∞ –≤—ã—Ö–æ–¥–∞', value: data.data.release_date.date, inline: true });
        if (data.data.metacritic) {
            embed.addFields({ name: 'Metacritic', value: data.data.metacritic.score.toString(), inline: true });
        }
        if (data.data.is_free === false) {
            embed.addFields({ name: '–¶–µ–Ω–∞', value: `${data.data.price_overview.final_formatted} ${data.data.price_overview.currency}`, inline: true }, { name: '–°–∫–∏–¥–∫–∞', value: `${data.data.price_overview.discount_percent}%`, inline: true });
        }
        else {
            embed.addFields({ name: '–¶–µ–Ω–∞', value: '–ë–µ—Å–ø–ª–∞—Ç–Ω–æ', inline: true });
        }
        if (success === false) {
            embed.setFooter({ text: '–í —ç—Ç–æ–π —Ü–µ–Ω–æ–≤–æ–π –∑–æ–Ω–µ –∏–≥—Ä–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞, –∏–≥—Ä–∞ –±—ã–ª–∞ –ø–æ–∫–∞–∑–∞–Ω–∞ –≤ USD' });
        }
        return {
            embed: embed,
            component: new ActionRowBuilder().addComponents(new StringSelectMenuBuilder()
                .setCustomId('gameDetailsSteam')
                .setPlaceholder('–í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é')
                .addOptions({ label: '–û—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π —Å–∞–π—Ç', value: 'website', emoji: 'üåê' }, { label: '–°–∏—Å—Ç–µ–º–Ω—ã–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è', value: 'sysreq', emoji: 'üñ•Ô∏è' }, { label: '–°–∫—Ä–∏–Ω—à–æ—Ç—ã', value: 'screenshots', emoji: 'üñºÔ∏è' }, { label: '–í–∏–¥–µ–æ', value: 'videos', emoji: 'üé•' }, { label: '–ü–µ—Ä–µ–π—Ç–∏ –≤ –º–∞–≥–∞–∑–∏–Ω', value: 'store', emoji: 'üõí' }))
        };
    },
    pcRecomendations: function (data) {
        const minimum = htmlToText(data.data.pc_requirements.minimum, { wordwrap: 130, preserveNewlines: true });
        const maximum = htmlToText(data.data.pc_requirements.recommended, { wordwrap: 130, preserveNewlines: true });
        return {
            embed: new EmbedBuilder()
                .setTitle('–°–∏—Å—Ç–µ–º–Ω—ã–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è')
                .setColor('Random')
                .setDescription(`
                ${minimum}\n
                ${maximum}
            `)
        };
    }
};
